#ifndef CUFFTDX_FFT_16_FP32_INV_PTX_HPP
#define CUFFTDX_FFT_16_FP32_INV_PTX_HPP



template<> __forceinline__ __device__ void cufftdx_private_function<238, float, 1>(cufftdx::detail::complex<float> *rmem, void *smem){

asm volatile ("{\n\t"
    ".reg .f32 f<240>;\n\t"
    ".reg .b64 rd<2>;\n\t"
    "add.f32 f65, %33, %54;\n\t"
    "add.f32 f66, %34, %56;\n\t"
    "sub.f32 f67, %33, %54;\n\t"
    "sub.f32 f68, %34, %56;\n\t"
    "add.f32 f69, %43, %65;\n\t"
    "add.f32 f70, %45, %66;\n\t"
    "sub.f32 f71, %43, %65;\n\t"
    "sub.f32 f72, %45, %66;\n\t"
    "add.f32 f73, f65, f69;\n\t"
    "add.f32 f74, f66, f70;\n\t"
    "sub.f32 f75, f65, f69;\n\t"
    "sub.f32 f76, f66, f70;\n\t"
    "sub.f32 f77, f67, f72;\n\t"
    "add.f32 f78, f68, f71;\n\t"
    "add.f32 f79, f67, f72;\n\t"
    "sub.f32 f80, f68, f71;\n\t"
    "add.f32 f81, %38, %59;\n\t"
    "add.f32 f82, %40, %61;\n\t"
    "sub.f32 f83, %38, %59;\n\t"
    "sub.f32 f84, %40, %61;\n\t"
    "add.f32 f85, %49, %70;\n\t"
    "add.f32 f86, %50, %72;\n\t"
    "sub.f32 f87, %49, %70;\n\t"
    "sub.f32 f88, %50, %72;\n\t"
    "add.f32 f89, f81, f85;\n\t"
    "add.f32 f90, f82, f86;\n\t"
    "sub.f32 f91, f81, f85;\n\t"
    "sub.f32 f92, f82, f86;\n\t"
    "sub.f32 f93, f83, f88;\n\t"
    "add.f32 f94, f84, f87;\n\t"
    "add.f32 f95, f83, f88;\n\t"
    "sub.f32 f96, f84, f87;\n\t"
    "mul.f32 f97, f93, 0f3F3504F3;\n\t"
    "mul.f32 f98, f94, 0f3F3504F3;\n\t"
    "sub.f32 f99, f97, f98;\n\t"
    "add.f32 f100, f97, f98;\n\t"
    "mul.f32 f101, f95, 0fBF3504F3;\n\t"
    "mul.f32 f102, f96, 0f3F3504F3;\n\t"
    "sub.f32 f103, f101, f102;\n\t"
    "mul.f32 f104, f96, 0fBF3504F3;\n\t"
    "fma.rn.f32 f105, f95, 0f3F3504F3, f104;\n\t"
    "add.f32 f106, f73, f89;\n\t"
    "add.f32 f107, f74, f90;\n\t"
    "sub.f32 f108, f73, f89;\n\t"
    "sub.f32 f109, f74, f90;\n\t"
    "add.f32 f110, f77, f99;\n\t"
    "add.f32 f111, f78, f100;\n\t"
    "sub.f32 f112, f77, f99;\n\t"
    "sub.f32 f113, f78, f100;\n\t"
    "sub.f32 f114, f75, f92;\n\t"
    "add.f32 f115, f76, f91;\n\t"
    "add.f32 f116, f75, f92;\n\t"
    "sub.f32 f117, f76, f91;\n\t"
    "add.f32 f118, f79, f103;\n\t"
    "add.f32 f119, f80, f105;\n\t"
    "sub.f32 f120, f79, f103;\n\t"
    "sub.f32 f121, f80, f105;\n\t"
    "add.f32 f122, %35, %57;\n\t"
    "add.f32 f123, %37, %58;\n\t"
    "sub.f32 f124, %35, %57;\n\t"
    "sub.f32 f125, %37, %58;\n\t"
    "add.f32 f126, %46, %67;\n\t"
    "add.f32 f127, %48, %69;\n\t"
    "sub.f32 f128, %46, %67;\n\t"
    "sub.f32 f129, %48, %69;\n\t"
    "add.f32 f130, f122, f126;\n\t"
    "add.f32 f131, f123, f127;\n\t"
    "sub.f32 f132, f122, f126;\n\t"
    "sub.f32 f133, f123, f127;\n\t"
    "sub.f32 f134, f124, f129;\n\t"
    "add.f32 f135, f125, f128;\n\t"
    "add.f32 f136, f124, f129;\n\t"
    "sub.f32 f137, f125, f128;\n\t"
    "add.f32 f138, %41, %62;\n\t"
    "add.f32 f139, %42, %64;\n\t"
    "sub.f32 f140, %41, %62;\n\t"
    "sub.f32 f141, %42, %64;\n\t"
    "add.f32 f142, %51, %73;\n\t"
    "add.f32 f143, %53, %74;\n\t"
    "sub.f32 f144, %51, %73;\n\t"
    "sub.f32 f145, %53, %74;\n\t"
    "add.f32 f146, f138, f142;\n\t"
    "add.f32 f147, f139, f143;\n\t"
    "sub.f32 f148, f138, f142;\n\t"
    "sub.f32 f149, f139, f143;\n\t"
    "sub.f32 f150, f140, f145;\n\t"
    "add.f32 f151, f141, f144;\n\t"
    "add.f32 f152, f140, f145;\n\t"
    "sub.f32 f153, f141, f144;\n\t"
    "mul.f32 f154, f150, 0f3F3504F3;\n\t"
    "mul.f32 f155, f151, 0f3F3504F3;\n\t"
    "sub.f32 f156, f154, f155;\n\t"
    "add.f32 f157, f154, f155;\n\t"
    "mul.f32 f158, f152, 0fBF3504F3;\n\t"
    "mul.f32 f159, f153, 0f3F3504F3;\n\t"
    "sub.f32 f160, f158, f159;\n\t"
    "mul.f32 f161, f153, 0fBF3504F3;\n\t"
    "fma.rn.f32 f162, f152, 0f3F3504F3, f161;\n\t"
    "add.f32 f163, f130, f146;\n\t"
    "add.f32 f164, f131, f147;\n\t"
    "sub.f32 f165, f130, f146;\n\t"
    "sub.f32 f166, f131, f147;\n\t"
    "add.f32 f167, f134, f156;\n\t"
    "add.f32 f168, f135, f157;\n\t"
    "sub.f32 f169, f134, f156;\n\t"
    "sub.f32 f170, f135, f157;\n\t"
    "sub.f32 f171, f132, f149;\n\t"
    "add.f32 f172, f133, f148;\n\t"
    "add.f32 f173, f132, f149;\n\t"
    "sub.f32 f174, f133, f148;\n\t"
    "add.f32 f175, f136, f160;\n\t"
    "add.f32 f176, f137, f162;\n\t"
    "sub.f32 f177, f136, f160;\n\t"
    "sub.f32 f178, f137, f162;\n\t"
    "mul.f32 f179, f167, 0f3F6C835E;\n\t"
    "mul.f32 f180, f168, 0f3EC3EF15;\n\t"
    "sub.f32 f181, f179, f180;\n\t"
    "mul.f32 f182, f168, 0f3F6C835E;\n\t"
    "fma.rn.f32 f183, f167, 0f3EC3EF15, f182;\n\t"
    "mul.f32 f184, f171, 0f3F3504F3;\n\t"
    "mul.f32 f185, f172, 0f3F3504F3;\n\t"
    "sub.f32 f186, f184, f185;\n\t"
    "add.f32 f187, f184, f185;\n\t"
    "mul.f32 f188, f175, 0f3EC3EF15;\n\t"
    "mul.f32 f189, f176, 0f3F6C835E;\n\t"
    "sub.f32 f190, f188, f189;\n\t"
    "mul.f32 f191, f176, 0f3EC3EF15;\n\t"
    "fma.rn.f32 f192, f175, 0f3F6C835E, f191;\n\t"
    "mul.f32 f193, f169, 0fBEC3EF15;\n\t"
    "mul.f32 f194, f170, 0f3F6C835E;\n\t"
    "sub.f32 f195, f193, f194;\n\t"
    "mul.f32 f196, f170, 0fBEC3EF15;\n\t"
    "fma.rn.f32 f197, f169, 0f3F6C835E, f196;\n\t"
    "mul.f32 f198, f173, 0fBF3504F3;\n\t"
    "mul.f32 f199, f174, 0f3F3504F3;\n\t"
    "sub.f32 f200, f198, f199;\n\t"
    "mul.f32 f201, f174, 0fBF3504F3;\n\t"
    "fma.rn.f32 f202, f173, 0f3F3504F3, f201;\n\t"
    "mul.f32 f203, f177, 0fBF6C835E;\n\t"
    "mul.f32 f204, f178, 0f3EC3EF15;\n\t"
    "sub.f32 f205, f203, f204;\n\t"
    "mul.f32 f206, f178, 0fBF6C835E;\n\t"
    "fma.rn.f32 f207, f177, 0f3EC3EF15, f206;\n\t"
    "add.f32 %1, f107, f164;\n\t"
    "add.f32 %0, f106, f163;\n\t"
    "add.f32 %3, f111, f183;\n\t"
    "add.f32 %2, f110, f181;\n\t"
    "add.f32 %5, f115, f187;\n\t"
    "add.f32 %4, f114, f186;\n\t"
    "add.f32 %7, f119, f192;\n\t"
    "add.f32 %6, f118, f190;\n\t"
    "add.f32 %9, f109, f165;\n\t"
    "sub.f32 %8, f108, f166;\n\t"
    "add.f32 %11, f113, f197;\n\t"
    "add.f32 %10, f112, f195;\n\t"
    "add.f32 %13, f117, f202;\n\t"
    "add.f32 %12, f116, f200;\n\t"
    "add.f32 %15, f121, f207;\n\t"
    "add.f32 %14, f120, f205;\n\t"
    "sub.f32 %17, f107, f164;\n\t"
    "sub.f32 %16, f106, f163;\n\t"
    "sub.f32 %19, f111, f183;\n\t"
    "sub.f32 %18, f110, f181;\n\t"
    "sub.f32 %21, f115, f187;\n\t"
    "sub.f32 %20, f114, f186;\n\t"
    "sub.f32 %23, f119, f192;\n\t"
    "sub.f32 %22, f118, f190;\n\t"
    "sub.f32 %25, f109, f165;\n\t"
    "add.f32 %24, f108, f166;\n\t"
    "sub.f32 %27, f113, f197;\n\t"
    "sub.f32 %26, f112, f195;\n\t"
    "sub.f32 %29, f117, f202;\n\t"
    "sub.f32 %28, f116, f200;\n\t"
    "sub.f32 %31, f121, f207;\n\t"
    "sub.f32 %30, f120, f205;\n\t"
    "}"
     : "=f"(rmem[0].x), "=f"(rmem[0].y), "=f"(rmem[1].x), "=f"(rmem[1].y), "=f"(rmem[2].x), "=f"(rmem[2].y), "=f"(rmem[3].x), "=f"(rmem[3].y), "=f"(rmem[4].x), "=f"(rmem[4].y), "=f"(rmem[5].x), "=f"(rmem[5].y), "=f"(rmem[6].x), "=f"(rmem[6].y), "=f"(rmem[7].x), "=f"(rmem[7].y), "=f"(rmem[8].x), "=f"(rmem[8].y), "=f"(rmem[9].x), "=f"(rmem[9].y), "=f"(rmem[10].x), "=f"(rmem[10].y), "=f"(rmem[11].x), "=f"(rmem[11].y), "=f"(rmem[12].x), "=f"(rmem[12].y), "=f"(rmem[13].x), "=f"(rmem[13].y), "=f"(rmem[14].x), "=f"(rmem[14].y), "=f"(rmem[15].x), "=f"(rmem[15].y): "l"(smem), "f"(rmem[0].x), "f"(rmem[0].y), "f"(rmem[1].x), "f"(rmem[1].y), "f"(rmem[1].y), "f"(rmem[2].x), "f"(rmem[2].y), "f"(rmem[2].y), "f"(rmem[3].x), "f"(rmem[3].y), "f"(rmem[4].x), "f"(rmem[4].y), "f"(rmem[4].y), "f"(rmem[5].x), "f"(rmem[5].y), "f"(rmem[5].y), "f"(rmem[6].x), "f"(rmem[6].y), "f"(rmem[7].x), "f"(rmem[7].y), "f"(rmem[7].y), "f"(rmem[8].x), "f"(rmem[8].y), "f"(rmem[8].y), "f"(rmem[9].x), "f"(rmem[9].y), "f"(rmem[10].x), "f"(rmem[10].y), "f"(rmem[10].y), "f"(rmem[11].x), "f"(rmem[11].y), "f"(rmem[11].y), "f"(rmem[12].x), "f"(rmem[12].y), "f"(rmem[13].x), "f"(rmem[13].y), "f"(rmem[13].y), "f"(rmem[14].x), "f"(rmem[14].y), "f"(rmem[14].y), "f"(rmem[15].x), "f"(rmem[15].y));
};




template<> __forceinline__ __device__ void cufftdx_private_function<239, float, 1>(cufftdx::detail::complex<float> *rmem, void *smem){

asm volatile ("{\n\t"
    ".reg .f32 f<86>;\n\t"
    ".reg .b32 r<17>;\n\t"
    ".reg .b64 rd<5>;\n\t"
    "mov.u32 r5, %tid.x;\n\t"
    "add.f32 f29, %10, %15;\n\t"
    "add.f32 f30, %11, %17;\n\t"
    "sub.f32 f31, %10, %15;\n\t"
    "sub.f32 f32, %11, %17;\n\t"
    "add.f32 f33, %12, %18;\n\t"
    "add.f32 f34, %14, %19;\n\t"
    "sub.f32 f35, %12, %18;\n\t"
    "sub.f32 f36, %14, %19;\n\t"
    "add.f32 f1, f29, f33;\n\t"
    "add.f32 f2, f30, f34;\n\t"
    "sub.f32 f37, f29, f33;\n\t"
    "sub.f32 f38, f30, f34;\n\t"
    "sub.f32 f39, f31, f36;\n\t"
    "add.f32 f40, f32, f35;\n\t"
    "add.f32 f41, f31, f36;\n\t"
    "sub.f32 f42, f32, f35;\n\t"
    "and.b32 r1, r5, 3;\n\t"
    "mul.wide.u32 rd2, r1, 8;\n\t"
    "mov.u64 rd3, %9;\n\t"
    "add.s64 rd4, rd3, rd2;\n\t"
    "ld.global.v2.f32 {f43, f44}, [rd4];\n\t"
    "mul.f32 f47, f40, f44;\n\t"
    "fma.rn.f32 f3, f43, f39, f47;\n\t"
    "mul.f32 f48, f39, f44;\n\t"
    "mul.f32 f49, f43, f40;\n\t"
    "sub.f32 f4, f49, f48;\n\t"
    "mul.f32 f50, f43, f43;\n\t"
    "mul.f32 f51, f44, f44;\n\t"
    "sub.f32 f52, f50, f51;\n\t"
    "mul.f32 f53, f44, f43;\n\t"
    "fma.rn.f32 f54, f44, f43, f53;\n\t"
    "mul.f32 f55, f38, f54;\n\t"
    "fma.rn.f32 f5, f52, f37, f55;\n\t"
    "mul.f32 f56, f37, f54;\n\t"
    "mul.f32 f57, f52, f38;\n\t"
    "sub.f32 f6, f57, f56;\n\t"
    "mul.f32 f58, f43, f52;\n\t"
    "mul.f32 f59, f44, f54;\n\t"
    "sub.f32 f60, f58, f59;\n\t"
    "mul.f32 f61, f43, f54;\n\t"
    "fma.rn.f32 f62, f44, f52, f61;\n\t"
    "mul.f32 f63, f42, f62;\n\t"
    "fma.rn.f32 f7, f60, f41, f63;\n\t"
    "mul.f32 f64, f41, f62;\n\t"
    "mul.f32 f65, f60, f42;\n\t"
    "sub.f32 f8, f65, f64;\n\t"
    "mov.u32 r6, %tid.y;\n\t"
    "shl.b32 r7, r6, 4;\n\t"
    "shl.b32 r8, r5, 2;\n\t"
    "and.b32 r9, r8, -16;\n\t"
    "add.s32 r2, r9, r7;\n\t"
    "barrier.sync 0;\n\t"
    "shl.b32 r10, r1, 2;\n\t"
    "add.s32 r11, r10, r2;\n\t"
    "shl.b32 r12, r11, 2;\n\t"
    "{\n\t"
    ".reg .u64 wide1;\n\t"
    ".reg .u32 narrow1;\n\t"
    "mov.u64 wide1, %8;\n\t"
    "cvt.u32.u64 narrow1, wide1;\n\t"
    "cvta.to.shared.u32 r13, narrow1;\n\t"
    "}\n\t"
    "add.s32 r3, r13, r12;\n\t"
    "st.shared.f32 [r3], f1;\n\t"
    "st.shared.f32 [r3+4], f3;\n\t"
    "st.shared.f32 [r3+8], f5;\n\t"
    "st.shared.f32 [r3+12], f7;\n\t"
    "barrier.sync 0;\n\t"
    "add.s32 r14, r1, r2;\n\t"
    "shl.b32 r15, r14, 2;\n\t"
    "add.s32 r4, r13, r15;\n\t"
    "ld.shared.f32 f9, [r4];\n\t"
    "ld.shared.f32 f10, [r4+16];\n\t"
    "ld.shared.f32 f11, [r4+32];\n\t"
    "ld.shared.f32 f12, [r4+48];\n\t"
    "barrier.sync 0;\n\t"
    "st.shared.f32 [r3], f2;\n\t"
    "st.shared.f32 [r3+4], f4;\n\t"
    "st.shared.f32 [r3+8], f6;\n\t"
    "st.shared.f32 [r3+12], f8;\n\t"
    "barrier.sync 0;\n\t"
    "ld.shared.f32 f66, [r4];\n\t"
    "ld.shared.f32 f67, [r4+16];\n\t"
    "ld.shared.f32 f68, [r4+32];\n\t"
    "ld.shared.f32 f69, [r4+48];\n\t"
    "add.f32 f70, f9, f11;\n\t"
    "add.f32 f71, f66, f68;\n\t"
    "sub.f32 f72, f9, f11;\n\t"
    "sub.f32 f73, f66, f68;\n\t"
    "add.f32 f74, f10, f12;\n\t"
    "add.f32 f75, f67, f69;\n\t"
    "sub.f32 f76, f10, f12;\n\t"
    "sub.f32 f77, f67, f69;\n\t"
    "add.f32 %0, f70, f74;\n\t"
    "add.f32 %1, f71, f75;\n\t"
    "add.f32 %3, f73, f76;\n\t"
    "sub.f32 %2, f72, f77;\n\t"
    "sub.f32 %4, f70, f74;\n\t"
    "sub.f32 %5, f71, f75;\n\t"
    "sub.f32 %7, f73, f76;\n\t"
    "add.f32 %6, f72, f77;\n\t"
    "}"
     : "=f"(rmem[0].x), "=f"(rmem[0].y), "=f"(rmem[1].x), "=f"(rmem[1].y), "=f"(rmem[2].x), "=f"(rmem[2].y), "=f"(rmem[3].x), "=f"(rmem[3].y): "l"(smem), "l"(lut_sp_4_16), "f"(rmem[0].x), "f"(rmem[0].y), "f"(rmem[1].x), "f"(rmem[1].y), "f"(rmem[1].y), "f"(rmem[2].x), "f"(rmem[2].y), "f"(rmem[2].y), "f"(rmem[3].x), "f"(rmem[3].y));
};




template<> __forceinline__ __device__ void cufftdx_private_function<240, float, 1>(cufftdx::detail::complex<float> *rmem, void *smem){

asm volatile ("{\n\t"
    ".reg .f32 f<94>;\n\t"
    ".reg .b32 r<17>;\n\t"
    ".reg .b64 rd<5>;\n\t"
    "mov.u32 r3, %tid.x;\n\t"
    "add.f32 f25, %10, %15;\n\t"
    "add.f32 f26, %11, %17;\n\t"
    "sub.f32 f27, %10, %15;\n\t"
    "sub.f32 f28, %11, %17;\n\t"
    "add.f32 f29, %12, %18;\n\t"
    "add.f32 f30, %14, %19;\n\t"
    "sub.f32 f31, %12, %18;\n\t"
    "sub.f32 f32, %14, %19;\n\t"
    "add.f32 f1, f25, f29;\n\t"
    "add.f32 f2, f26, f30;\n\t"
    "sub.f32 f33, f25, f29;\n\t"
    "sub.f32 f34, f26, f30;\n\t"
    "sub.f32 f35, f27, f32;\n\t"
    "add.f32 f36, f28, f31;\n\t"
    "add.f32 f37, f27, f32;\n\t"
    "sub.f32 f38, f28, f31;\n\t"
    "and.b32 r1, r3, 3;\n\t"
    "mul.wide.u32 rd2, r1, 8;\n\t"
    "mov.u64 rd3, %9;\n\t"
    "add.s64 rd4, rd3, rd2;\n\t"
    "ld.global.v2.f32 {f39, f40}, [rd4];\n\t"
    "mul.f32 f43, f36, f40;\n\t"
    "fma.rn.f32 f3, f39, f35, f43;\n\t"
    "mul.f32 f44, f35, f40;\n\t"
    "mul.f32 f45, f39, f36;\n\t"
    "sub.f32 f4, f45, f44;\n\t"
    "mul.f32 f46, f39, f39;\n\t"
    "mul.f32 f47, f40, f40;\n\t"
    "sub.f32 f48, f46, f47;\n\t"
    "mul.f32 f49, f40, f39;\n\t"
    "fma.rn.f32 f50, f40, f39, f49;\n\t"
    "mul.f32 f51, f34, f50;\n\t"
    "fma.rn.f32 f5, f48, f33, f51;\n\t"
    "mul.f32 f52, f33, f50;\n\t"
    "mul.f32 f53, f48, f34;\n\t"
    "sub.f32 f6, f53, f52;\n\t"
    "mul.f32 f54, f39, f48;\n\t"
    "mul.f32 f55, f40, f50;\n\t"
    "sub.f32 f56, f54, f55;\n\t"
    "mul.f32 f57, f39, f50;\n\t"
    "fma.rn.f32 f58, f40, f48, f57;\n\t"
    "mul.f32 f59, f38, f58;\n\t"
    "fma.rn.f32 f7, f56, f37, f59;\n\t"
    "mul.f32 f60, f37, f58;\n\t"
    "mul.f32 f61, f56, f38;\n\t"
    "sub.f32 f8, f61, f60;\n\t"
    "mov.u32 r4, %tid.y;\n\t"
    "shl.b32 r5, r4, 4;\n\t"
    "shl.b32 r6, r3, 2;\n\t"
    "and.b32 r7, r6, -16;\n\t"
    "add.s32 r2, r7, r5;\n\t"
    "barrier.sync 0;\n\t"
    "shl.b32 r8, r1, 2;\n\t"
    "add.s32 r9, r8, r2;\n\t"
    "shl.b32 r10, r9, 3;\n\t"
    "{\n\t"
    ".reg .u64 wide1;\n\t"
    ".reg .u32 narrow1;\n\t"
    "mov.u64 wide1, %8;\n\t"
    "cvt.u32.u64 narrow1, wide1;\n\t"
    "cvta.to.shared.u32 r11, narrow1;\n\t"
    "}\n\t"
    "add.s32 r12, r11, r10;\n\t"
    "st.shared.v2.f32 [r12], {f1, f2};\n\t"
    "st.shared.v2.f32 [r12+8], {f3, f4};\n\t"
    "st.shared.v2.f32 [r12+16], {f5, f6};\n\t"
    "st.shared.v2.f32 [r12+24], {f7, f8};\n\t"
    "barrier.sync 0;\n\t"
    "add.s32 r13, r1, r2;\n\t"
    "shl.b32 r14, r13, 3;\n\t"
    "add.s32 r16, r11, r14;\n\t"
    "ld.shared.v2.f32 {f62, f63}, [r16];\n\t"
    "ld.shared.v2.f32 {f66, f67}, [r16+32];\n\t"
    "ld.shared.v2.f32 {f70, f71}, [r16+64];\n\t"
    "ld.shared.v2.f32 {f74, f75}, [r16+96];\n\t"
    "add.f32 f78, f62, f70;\n\t"
    "add.f32 f79, f63, f71;\n\t"
    "sub.f32 f80, f62, f70;\n\t"
    "sub.f32 f81, f63, f71;\n\t"
    "add.f32 f82, f66, f74;\n\t"
    "add.f32 f83, f67, f75;\n\t"
    "sub.f32 f84, f66, f74;\n\t"
    "sub.f32 f85, f67, f75;\n\t"
    "add.f32 %1, f79, f83;\n\t"
    "add.f32 %0, f78, f82;\n\t"
    "add.f32 %3, f81, f84;\n\t"
    "sub.f32 %2, f80, f85;\n\t"
    "sub.f32 %5, f79, f83;\n\t"
    "sub.f32 %4, f78, f82;\n\t"
    "sub.f32 %7, f81, f84;\n\t"
    "add.f32 %6, f80, f85;\n\t"
    "}"
     : "=f"(rmem[0].x), "=f"(rmem[0].y), "=f"(rmem[1].x), "=f"(rmem[1].y), "=f"(rmem[2].x), "=f"(rmem[2].y), "=f"(rmem[3].x), "=f"(rmem[3].y): "l"(smem), "l"(lut_sp_4_16), "f"(rmem[0].x), "f"(rmem[0].y), "f"(rmem[1].x), "f"(rmem[1].y), "f"(rmem[1].y), "f"(rmem[2].x), "f"(rmem[2].y), "f"(rmem[2].y), "f"(rmem[3].x), "f"(rmem[3].y));
};




template<> __forceinline__ __device__ void cufftdx_private_function<241, float, 1>(cufftdx::detail::complex<float> *rmem, void *smem){

asm volatile ("{\n\t"
    ".reg .f32 f<207>;\n\t"
    ".reg .b32 r<17>;\n\t"
    ".reg .b64 rd<5>;\n\t"
    "mov.u32 r3, %tid.y;\n\t"
    "shl.b32 r4, r3, 4;\n\t"
    "mov.u32 r5, %tid.x;\n\t"
    "add.f32 f49, %18, %28;\n\t"
    "add.f32 f50, %19, %30;\n\t"
    "sub.f32 f51, %18, %28;\n\t"
    "sub.f32 f52, %19, %30;\n\t"
    "add.f32 f53, %23, %34;\n\t"
    "add.f32 f54, %25, %35;\n\t"
    "sub.f32 f55, %23, %34;\n\t"
    "sub.f32 f56, %25, %35;\n\t"
    "add.f32 f57, f49, f53;\n\t"
    "add.f32 f58, f50, f54;\n\t"
    "sub.f32 f59, f49, f53;\n\t"
    "sub.f32 f60, f50, f54;\n\t"
    "sub.f32 f61, f51, f56;\n\t"
    "add.f32 f62, f52, f55;\n\t"
    "add.f32 f63, f51, f56;\n\t"
    "sub.f32 f64, f52, f55;\n\t"
    "add.f32 f65, %20, %31;\n\t"
    "add.f32 f66, %22, %33;\n\t"
    "sub.f32 f67, %20, %31;\n\t"
    "sub.f32 f68, %22, %33;\n\t"
    "add.f32 f69, %26, %36;\n\t"
    "add.f32 f70, %27, %37;\n\t"
    "sub.f32 f71, %26, %36;\n\t"
    "sub.f32 f72, %27, %37;\n\t"
    "add.f32 f73, f65, f69;\n\t"
    "add.f32 f74, f66, f70;\n\t"
    "sub.f32 f75, f65, f69;\n\t"
    "sub.f32 f76, f66, f70;\n\t"
    "sub.f32 f77, f67, f72;\n\t"
    "add.f32 f78, f68, f71;\n\t"
    "add.f32 f79, f67, f72;\n\t"
    "sub.f32 f80, f68, f71;\n\t"
    "mul.f32 f81, f77, 0f3F3504F3;\n\t"
    "mul.f32 f82, f78, 0f3F3504F3;\n\t"
    "sub.f32 f83, f81, f82;\n\t"
    "add.f32 f84, f81, f82;\n\t"
    "mul.f32 f85, f79, 0fBF3504F3;\n\t"
    "mul.f32 f86, f80, 0f3F3504F3;\n\t"
    "sub.f32 f87, f85, f86;\n\t"
    "mul.f32 f88, f80, 0fBF3504F3;\n\t"
    "fma.rn.f32 f89, f79, 0f3F3504F3, f88;\n\t"
    "add.f32 f1, f57, f73;\n\t"
    "add.f32 f2, f58, f74;\n\t"
    "sub.f32 f90, f57, f73;\n\t"
    "sub.f32 f91, f58, f74;\n\t"
    "add.f32 f92, f61, f83;\n\t"
    "add.f32 f93, f62, f84;\n\t"
    "sub.f32 f94, f61, f83;\n\t"
    "sub.f32 f95, f62, f84;\n\t"
    "sub.f32 f96, f59, f76;\n\t"
    "add.f32 f97, f60, f75;\n\t"
    "add.f32 f98, f59, f76;\n\t"
    "sub.f32 f99, f60, f75;\n\t"
    "add.f32 f100, f63, f87;\n\t"
    "add.f32 f101, f64, f89;\n\t"
    "sub.f32 f102, f63, f87;\n\t"
    "sub.f32 f103, f64, f89;\n\t"
    "and.b32 r1, r5, 1;\n\t"
    "mul.wide.u32 rd2, r1, 8;\n\t"
    "mov.u64 rd3, %17;\n\t"
    "add.s64 rd4, rd3, rd2;\n\t"
    "ld.global.v2.f32 {f104, f105}, [rd4];\n\t"
    "mul.f32 f108, f93, f105;\n\t"
    "fma.rn.f32 f3, f104, f92, f108;\n\t"
    "mul.f32 f109, f92, f105;\n\t"
    "mul.f32 f110, f104, f93;\n\t"
    "sub.f32 f4, f110, f109;\n\t"
    "mul.f32 f111, f104, f104;\n\t"
    "mul.f32 f112, f105, f105;\n\t"
    "sub.f32 f113, f111, f112;\n\t"
    "mul.f32 f114, f105, f104;\n\t"
    "fma.rn.f32 f115, f105, f104, f114;\n\t"
    "mul.f32 f116, f97, f115;\n\t"
    "fma.rn.f32 f5, f113, f96, f116;\n\t"
    "mul.f32 f117, f96, f115;\n\t"
    "mul.f32 f118, f113, f97;\n\t"
    "sub.f32 f6, f118, f117;\n\t"
    "mul.f32 f119, f104, f113;\n\t"
    "mul.f32 f120, f105, f115;\n\t"
    "sub.f32 f121, f119, f120;\n\t"
    "mul.f32 f122, f104, f115;\n\t"
    "fma.rn.f32 f123, f105, f113, f122;\n\t"
    "mul.f32 f124, f101, f123;\n\t"
    "fma.rn.f32 f7, f121, f100, f124;\n\t"
    "mul.f32 f125, f100, f123;\n\t"
    "mul.f32 f126, f121, f101;\n\t"
    "sub.f32 f8, f126, f125;\n\t"
    "mul.f32 f127, f104, f121;\n\t"
    "mul.f32 f128, f105, f123;\n\t"
    "sub.f32 f129, f127, f128;\n\t"
    "mul.f32 f130, f104, f123;\n\t"
    "fma.rn.f32 f131, f105, f121, f130;\n\t"
    "mul.f32 f132, f91, f131;\n\t"
    "fma.rn.f32 f9, f129, f90, f132;\n\t"
    "mul.f32 f133, f90, f131;\n\t"
    "mul.f32 f134, f129, f91;\n\t"
    "sub.f32 f10, f134, f133;\n\t"
    "mul.f32 f135, f104, f129;\n\t"
    "mul.f32 f136, f105, f131;\n\t"
    "sub.f32 f137, f135, f136;\n\t"
    "mul.f32 f138, f104, f131;\n\t"
    "fma.rn.f32 f139, f105, f129, f138;\n\t"
    "mul.f32 f140, f95, f139;\n\t"
    "fma.rn.f32 f11, f137, f94, f140;\n\t"
    "mul.f32 f141, f94, f139;\n\t"
    "mul.f32 f142, f137, f95;\n\t"
    "sub.f32 f12, f142, f141;\n\t"
    "mul.f32 f143, f104, f137;\n\t"
    "mul.f32 f144, f105, f139;\n\t"
    "sub.f32 f145, f143, f144;\n\t"
    "mul.f32 f146, f104, f139;\n\t"
    "fma.rn.f32 f147, f105, f137, f146;\n\t"
    "mul.f32 f148, f99, f147;\n\t"
    "fma.rn.f32 f13, f145, f98, f148;\n\t"
    "mul.f32 f149, f98, f147;\n\t"
    "mul.f32 f150, f145, f99;\n\t"
    "sub.f32 f14, f150, f149;\n\t"
    "mul.f32 f151, f104, f145;\n\t"
    "mul.f32 f152, f105, f147;\n\t"
    "sub.f32 f153, f151, f152;\n\t"
    "mul.f32 f154, f104, f147;\n\t"
    "fma.rn.f32 f155, f105, f145, f154;\n\t"
    "mul.f32 f156, f103, f155;\n\t"
    "fma.rn.f32 f15, f153, f102, f156;\n\t"
    "mul.f32 f157, f102, f155;\n\t"
    "mul.f32 f158, f153, f103;\n\t"
    "sub.f32 f16, f158, f157;\n\t"
    "shl.b32 r6, r5, 3;\n\t"
    "and.b32 r7, r6, -16;\n\t"
    "add.s32 r2, r7, r4;\n\t"
    "barrier.sync 0;\n\t"
    "shl.b32 r8, r1, 3;\n\t"
    "add.s32 r9, r8, r2;\n\t"
    "shl.b32 r10, r9, 3;\n\t"
    "{\n\t"
    ".reg .u64 wide1;\n\t"
    ".reg .u32 narrow1;\n\t"
    "mov.u64 wide1, %16;\n\t"
    "cvt.u32.u64 narrow1, wide1;\n\t"
    "cvta.to.shared.u32 r11, narrow1;\n\t"
    "}\n\t"
    "add.s32 r12, r11, r10;\n\t"
    "st.shared.v2.f32 [r12], {f1, f2};\n\t"
    "st.shared.v2.f32 [r12+8], {f3, f4};\n\t"
    "st.shared.v2.f32 [r12+16], {f5, f6};\n\t"
    "st.shared.v2.f32 [r12+24], {f7, f8};\n\t"
    "st.shared.v2.f32 [r12+32], {f9, f10};\n\t"
    "st.shared.v2.f32 [r12+40], {f11, f12};\n\t"
    "st.shared.v2.f32 [r12+48], {f13, f14};\n\t"
    "st.shared.v2.f32 [r12+56], {f15, f16};\n\t"
    "barrier.sync 0;\n\t"
    "add.s32 r13, r1, r2;\n\t"
    "shl.b32 r14, r13, 3;\n\t"
    "add.s32 r16, r11, r14;\n\t"
    "ld.shared.v2.f32 {f159, f160}, [r16];\n\t"
    "ld.shared.v2.f32 {f163, f164}, [r16+16];\n\t"
    "ld.shared.v2.f32 {f167, f168}, [r16+32];\n\t"
    "ld.shared.v2.f32 {f171, f172}, [r16+48];\n\t"
    "ld.shared.v2.f32 {f175, f176}, [r16+64];\n\t"
    "ld.shared.v2.f32 {f179, f180}, [r16+80];\n\t"
    "ld.shared.v2.f32 {f183, f184}, [r16+96];\n\t"
    "ld.shared.v2.f32 {f187, f188}, [r16+112];\n\t"
    "add.f32 %1, f160, f176;\n\t"
    "add.f32 %0, f159, f175;\n\t"
    "add.f32 %3, f164, f180;\n\t"
    "add.f32 %2, f163, f179;\n\t"
    "add.f32 %5, f168, f184;\n\t"
    "add.f32 %4, f167, f183;\n\t"
    "add.f32 %7, f172, f188;\n\t"
    "add.f32 %6, f171, f187;\n\t"
    "sub.f32 %9, f160, f176;\n\t"
    "sub.f32 %8, f159, f175;\n\t"
    "sub.f32 %11, f164, f180;\n\t"
    "sub.f32 %10, f163, f179;\n\t"
    "sub.f32 %13, f168, f184;\n\t"
    "sub.f32 %12, f167, f183;\n\t"
    "sub.f32 %15, f172, f188;\n\t"
    "sub.f32 %14, f171, f187;\n\t"
    "}"
     : "=f"(rmem[0].x), "=f"(rmem[0].y), "=f"(rmem[1].x), "=f"(rmem[1].y), "=f"(rmem[2].x), "=f"(rmem[2].y), "=f"(rmem[3].x), "=f"(rmem[3].y), "=f"(rmem[4].x), "=f"(rmem[4].y), "=f"(rmem[5].x), "=f"(rmem[5].y), "=f"(rmem[6].x), "=f"(rmem[6].y), "=f"(rmem[7].x), "=f"(rmem[7].y): "l"(smem), "l"(lut_sp_8_16), "f"(rmem[0].x), "f"(rmem[0].y), "f"(rmem[1].x), "f"(rmem[1].y), "f"(rmem[1].y), "f"(rmem[2].x), "f"(rmem[2].y), "f"(rmem[2].y), "f"(rmem[3].x), "f"(rmem[3].y), "f"(rmem[4].x), "f"(rmem[4].y), "f"(rmem[4].y), "f"(rmem[5].x), "f"(rmem[5].y), "f"(rmem[5].y), "f"(rmem[6].x), "f"(rmem[6].y), "f"(rmem[7].x), "f"(rmem[7].y));
};




template<> __forceinline__ __device__ void cufftdx_private_function<242, float, 1>(cufftdx::detail::complex<float> *rmem, void *smem){

asm volatile ("{\n\t"
    ".reg .f32 f<191>;\n\t"
    ".reg .b32 r<17>;\n\t"
    ".reg .b64 rd<5>;\n\t"
    "mov.u32 r5, %tid.y;\n\t"
    "shl.b32 r6, r5, 4;\n\t"
    "mov.u32 r7, %tid.x;\n\t"
    "add.f32 f57, %18, %28;\n\t"
    "add.f32 f58, %19, %30;\n\t"
    "sub.f32 f59, %18, %28;\n\t"
    "sub.f32 f60, %19, %30;\n\t"
    "add.f32 f61, %23, %34;\n\t"
    "add.f32 f62, %25, %35;\n\t"
    "sub.f32 f63, %23, %34;\n\t"
    "sub.f32 f64, %25, %35;\n\t"
    "add.f32 f65, f57, f61;\n\t"
    "add.f32 f66, f58, f62;\n\t"
    "sub.f32 f67, f57, f61;\n\t"
    "sub.f32 f68, f58, f62;\n\t"
    "sub.f32 f69, f59, f64;\n\t"
    "add.f32 f70, f60, f63;\n\t"
    "add.f32 f71, f59, f64;\n\t"
    "sub.f32 f72, f60, f63;\n\t"
    "add.f32 f73, %20, %31;\n\t"
    "add.f32 f74, %22, %33;\n\t"
    "sub.f32 f75, %20, %31;\n\t"
    "sub.f32 f76, %22, %33;\n\t"
    "add.f32 f77, %26, %36;\n\t"
    "add.f32 f78, %27, %37;\n\t"
    "sub.f32 f79, %26, %36;\n\t"
    "sub.f32 f80, %27, %37;\n\t"
    "add.f32 f81, f73, f77;\n\t"
    "add.f32 f82, f74, f78;\n\t"
    "sub.f32 f83, f73, f77;\n\t"
    "sub.f32 f84, f74, f78;\n\t"
    "sub.f32 f85, f75, f80;\n\t"
    "add.f32 f86, f76, f79;\n\t"
    "add.f32 f87, f75, f80;\n\t"
    "sub.f32 f88, f76, f79;\n\t"
    "mul.f32 f89, f85, 0f3F3504F3;\n\t"
    "mul.f32 f90, f86, 0f3F3504F3;\n\t"
    "sub.f32 f91, f89, f90;\n\t"
    "add.f32 f92, f89, f90;\n\t"
    "mul.f32 f93, f87, 0fBF3504F3;\n\t"
    "mul.f32 f94, f88, 0f3F3504F3;\n\t"
    "sub.f32 f95, f93, f94;\n\t"
    "mul.f32 f96, f88, 0fBF3504F3;\n\t"
    "fma.rn.f32 f97, f87, 0f3F3504F3, f96;\n\t"
    "add.f32 f1, f65, f81;\n\t"
    "add.f32 f2, f66, f82;\n\t"
    "sub.f32 f98, f65, f81;\n\t"
    "sub.f32 f99, f66, f82;\n\t"
    "add.f32 f100, f69, f91;\n\t"
    "add.f32 f101, f70, f92;\n\t"
    "sub.f32 f102, f69, f91;\n\t"
    "sub.f32 f103, f70, f92;\n\t"
    "sub.f32 f104, f67, f84;\n\t"
    "add.f32 f105, f68, f83;\n\t"
    "add.f32 f106, f67, f84;\n\t"
    "sub.f32 f107, f68, f83;\n\t"
    "add.f32 f108, f71, f95;\n\t"
    "add.f32 f109, f72, f97;\n\t"
    "sub.f32 f110, f71, f95;\n\t"
    "sub.f32 f111, f72, f97;\n\t"
    "and.b32 r1, r7, 1;\n\t"
    "mul.wide.u32 rd2, r1, 8;\n\t"
    "mov.u64 rd3, %17;\n\t"
    "add.s64 rd4, rd3, rd2;\n\t"
    "ld.global.v2.f32 {f112, f113}, [rd4];\n\t"
    "mul.f32 f116, f101, f113;\n\t"
    "fma.rn.f32 f3, f112, f100, f116;\n\t"
    "mul.f32 f117, f100, f113;\n\t"
    "mul.f32 f118, f112, f101;\n\t"
    "sub.f32 f4, f118, f117;\n\t"
    "mul.f32 f119, f112, f112;\n\t"
    "mul.f32 f120, f113, f113;\n\t"
    "sub.f32 f121, f119, f120;\n\t"
    "mul.f32 f122, f113, f112;\n\t"
    "fma.rn.f32 f123, f113, f112, f122;\n\t"
    "mul.f32 f124, f105, f123;\n\t"
    "fma.rn.f32 f5, f121, f104, f124;\n\t"
    "mul.f32 f125, f104, f123;\n\t"
    "mul.f32 f126, f121, f105;\n\t"
    "sub.f32 f6, f126, f125;\n\t"
    "mul.f32 f127, f112, f121;\n\t"
    "mul.f32 f128, f113, f123;\n\t"
    "sub.f32 f129, f127, f128;\n\t"
    "mul.f32 f130, f112, f123;\n\t"
    "fma.rn.f32 f131, f113, f121, f130;\n\t"
    "mul.f32 f132, f109, f131;\n\t"
    "fma.rn.f32 f7, f129, f108, f132;\n\t"
    "mul.f32 f133, f108, f131;\n\t"
    "mul.f32 f134, f129, f109;\n\t"
    "sub.f32 f8, f134, f133;\n\t"
    "mul.f32 f135, f112, f129;\n\t"
    "mul.f32 f136, f113, f131;\n\t"
    "sub.f32 f137, f135, f136;\n\t"
    "mul.f32 f138, f112, f131;\n\t"
    "fma.rn.f32 f139, f113, f129, f138;\n\t"
    "mul.f32 f140, f99, f139;\n\t"
    "fma.rn.f32 f9, f137, f98, f140;\n\t"
    "mul.f32 f141, f98, f139;\n\t"
    "mul.f32 f142, f137, f99;\n\t"
    "sub.f32 f10, f142, f141;\n\t"
    "mul.f32 f143, f112, f137;\n\t"
    "mul.f32 f144, f113, f139;\n\t"
    "sub.f32 f145, f143, f144;\n\t"
    "mul.f32 f146, f112, f139;\n\t"
    "fma.rn.f32 f147, f113, f137, f146;\n\t"
    "mul.f32 f148, f103, f147;\n\t"
    "fma.rn.f32 f11, f145, f102, f148;\n\t"
    "mul.f32 f149, f102, f147;\n\t"
    "mul.f32 f150, f145, f103;\n\t"
    "sub.f32 f12, f150, f149;\n\t"
    "mul.f32 f151, f112, f145;\n\t"
    "mul.f32 f152, f113, f147;\n\t"
    "sub.f32 f153, f151, f152;\n\t"
    "mul.f32 f154, f112, f147;\n\t"
    "fma.rn.f32 f155, f113, f145, f154;\n\t"
    "mul.f32 f156, f107, f155;\n\t"
    "fma.rn.f32 f13, f153, f106, f156;\n\t"
    "mul.f32 f157, f106, f155;\n\t"
    "mul.f32 f158, f153, f107;\n\t"
    "sub.f32 f14, f158, f157;\n\t"
    "mul.f32 f159, f112, f153;\n\t"
    "mul.f32 f160, f113, f155;\n\t"
    "sub.f32 f161, f159, f160;\n\t"
    "mul.f32 f162, f112, f155;\n\t"
    "fma.rn.f32 f163, f113, f153, f162;\n\t"
    "mul.f32 f164, f111, f163;\n\t"
    "fma.rn.f32 f15, f161, f110, f164;\n\t"
    "mul.f32 f165, f110, f163;\n\t"
    "mul.f32 f166, f161, f111;\n\t"
    "sub.f32 f16, f166, f165;\n\t"
    "shl.b32 r8, r7, 3;\n\t"
    "and.b32 r9, r8, -16;\n\t"
    "add.s32 r2, r9, r6;\n\t"
    "barrier.sync 0;\n\t"
    "shl.b32 r10, r1, 3;\n\t"
    "add.s32 r11, r10, r2;\n\t"
    "shl.b32 r12, r11, 2;\n\t"
    "{\n\t"
    ".reg .u64 wide1;\n\t"
    ".reg .u32 narrow1;\n\t"
    "mov.u64 wide1, %16;\n\t"
    "cvt.u32.u64 narrow1, wide1;\n\t"
    "cvta.to.shared.u32 r13, narrow1;\n\t"
    "}\n\t"
    "add.s32 r3, r13, r12;\n\t"
    "st.shared.f32 [r3], f1;\n\t"
    "st.shared.f32 [r3+4], f3;\n\t"
    "st.shared.f32 [r3+8], f5;\n\t"
    "st.shared.f32 [r3+12], f7;\n\t"
    "st.shared.f32 [r3+16], f9;\n\t"
    "st.shared.f32 [r3+20], f11;\n\t"
    "st.shared.f32 [r3+24], f13;\n\t"
    "st.shared.f32 [r3+28], f15;\n\t"
    "barrier.sync 0;\n\t"
    "add.s32 r14, r1, r2;\n\t"
    "shl.b32 r15, r14, 2;\n\t"
    "add.s32 r4, r13, r15;\n\t"
    "ld.shared.f32 f17, [r4];\n\t"
    "ld.shared.f32 f18, [r4+8];\n\t"
    "ld.shared.f32 f19, [r4+16];\n\t"
    "ld.shared.f32 f20, [r4+24];\n\t"
    "ld.shared.f32 f21, [r4+32];\n\t"
    "ld.shared.f32 f22, [r4+40];\n\t"
    "ld.shared.f32 f23, [r4+48];\n\t"
    "ld.shared.f32 f24, [r4+56];\n\t"
    "barrier.sync 0;\n\t"
    "st.shared.f32 [r3], f2;\n\t"
    "st.shared.f32 [r3+4], f4;\n\t"
    "st.shared.f32 [r3+8], f6;\n\t"
    "st.shared.f32 [r3+12], f8;\n\t"
    "st.shared.f32 [r3+16], f10;\n\t"
    "st.shared.f32 [r3+20], f12;\n\t"
    "st.shared.f32 [r3+24], f14;\n\t"
    "st.shared.f32 [r3+28], f16;\n\t"
    "barrier.sync 0;\n\t"
    "ld.shared.f32 f167, [r4];\n\t"
    "ld.shared.f32 f168, [r4+8];\n\t"
    "ld.shared.f32 f169, [r4+16];\n\t"
    "ld.shared.f32 f170, [r4+24];\n\t"
    "ld.shared.f32 f171, [r4+32];\n\t"
    "ld.shared.f32 f172, [r4+40];\n\t"
    "ld.shared.f32 f173, [r4+48];\n\t"
    "ld.shared.f32 f174, [r4+56];\n\t"
    "add.f32 %0, f17, f21;\n\t"
    "add.f32 %1, f167, f171;\n\t"
    "add.f32 %2, f18, f22;\n\t"
    "add.f32 %3, f168, f172;\n\t"
    "add.f32 %4, f19, f23;\n\t"
    "add.f32 %5, f169, f173;\n\t"
    "add.f32 %6, f20, f24;\n\t"
    "add.f32 %7, f170, f174;\n\t"
    "sub.f32 %8, f17, f21;\n\t"
    "sub.f32 %9, f167, f171;\n\t"
    "sub.f32 %10, f18, f22;\n\t"
    "sub.f32 %11, f168, f172;\n\t"
    "sub.f32 %12, f19, f23;\n\t"
    "sub.f32 %13, f169, f173;\n\t"
    "sub.f32 %14, f20, f24;\n\t"
    "sub.f32 %15, f170, f174;\n\t"
    "}"
     : "=f"(rmem[0].x), "=f"(rmem[0].y), "=f"(rmem[1].x), "=f"(rmem[1].y), "=f"(rmem[2].x), "=f"(rmem[2].y), "=f"(rmem[3].x), "=f"(rmem[3].y), "=f"(rmem[4].x), "=f"(rmem[4].y), "=f"(rmem[5].x), "=f"(rmem[5].y), "=f"(rmem[6].x), "=f"(rmem[6].y), "=f"(rmem[7].x), "=f"(rmem[7].y): "l"(smem), "l"(lut_sp_8_16), "f"(rmem[0].x), "f"(rmem[0].y), "f"(rmem[1].x), "f"(rmem[1].y), "f"(rmem[1].y), "f"(rmem[2].x), "f"(rmem[2].y), "f"(rmem[2].y), "f"(rmem[3].x), "f"(rmem[3].y), "f"(rmem[4].x), "f"(rmem[4].y), "f"(rmem[4].y), "f"(rmem[5].x), "f"(rmem[5].y), "f"(rmem[5].y), "f"(rmem[6].x), "f"(rmem[6].y), "f"(rmem[7].x), "f"(rmem[7].y));
};




template<> __forceinline__ __device__ void cufftdx_private_function<243, float, 1>(cufftdx::detail::complex<float> *rmem, void *smem){

asm volatile ("{\n\t"
    ".reg .f32 f<64>;\n\t"
    ".reg .b32 r<43>;\n\t"
    ".reg .b64 rd<11>;\n\t"
    "mov.u32 r1, %tid.x;\n\t"
    "add.f32 f1, %8, %10;\n\t"
    "add.f32 f2, %9, %11;\n\t"
    "sub.f32 f27, %8, %10;\n\t"
    "sub.f32 f28, %9, %11;\n\t"
    "and.b32 r2, r1, 7;\n\t"
    "mul.wide.u32 rd2, r2, 8;\n\t"
    "mov.u64 rd3, %5;\n\t"
    "add.s64 rd4, rd3, rd2;\n\t"
    "ld.global.v2.f32 {f29, f30}, [rd4];\n\t"
    "mul.f32 f33, f28, f30;\n\t"
    "fma.rn.f32 f3, f29, f27, f33;\n\t"
    "mul.f32 f34, f27, f30;\n\t"
    "mul.f32 f35, f29, f28;\n\t"
    "sub.f32 f4, f35, f34;\n\t"
    "mov.u32 r14, %tid.y;\n\t"
    "shl.b32 r15, r14, 4;\n\t"
    "shl.b32 r16, r1, 1;\n\t"
    "and.b32 r17, r16, -16;\n\t"
    "add.s32 r3, r17, r15;\n\t"
    "barrier.sync 0;\n\t"
    "shl.b32 r18, r2, 1;\n\t"
    "add.s32 r19, r18, r3;\n\t"
    "shl.b32 r20, r19, 2;\n\t"
    "{\n\t"
    ".reg .u64 wide1;\n\t"
    ".reg .u32 narrow1;\n\t"
    "mov.u64 wide1, %4;\n\t"
    "cvt.u32.u64 narrow1, wide1;\n\t"
    "cvta.to.shared.u32 r21, narrow1;\n\t"
    "}\n\t"
    "add.s32 r4, r21, r20;\n\t"
    "st.shared.f32 [r4], f1;\n\t"
    "st.shared.f32 [r4+4], f3;\n\t"
    "barrier.sync 0;\n\t"
    "add.s32 r22, r2, r3;\n\t"
    "shl.b32 r23, r22, 2;\n\t"
    "add.s32 r5, r21, r23;\n\t"
    "ld.shared.f32 f5, [r5];\n\t"
    "ld.shared.f32 f6, [r5+32];\n\t"
    "barrier.sync 0;\n\t"
    "st.shared.f32 [r4], f2;\n\t"
    "st.shared.f32 [r4+4], f4;\n\t"
    "barrier.sync 0;\n\t"
    "ld.shared.f32 f36, [r5];\n\t"
    "ld.shared.f32 f37, [r5+32];\n\t"
    "add.f32 f7, f5, f6;\n\t"
    "add.f32 f8, f36, f37;\n\t"
    "sub.f32 f38, f5, f6;\n\t"
    "sub.f32 f39, f36, f37;\n\t"
    "and.b32 r6, r1, 6;\n\t"
    "bfe.u32 r25, r1, 1, 2;\n\t"
    "mul.wide.u32 rd5, r25, 8;\n\t"
    "mov.u64 rd6, %6;\n\t"
    "add.s64 rd7, rd6, rd5;\n\t"
    "ld.global.v2.f32 {f40, f41}, [rd7];\n\t"
    "mul.f32 f44, f39, f41;\n\t"
    "fma.rn.f32 f9, f40, f38, f44;\n\t"
    "mul.f32 f45, f38, f41;\n\t"
    "mul.f32 f46, f40, f39;\n\t"
    "sub.f32 f10, f46, f45;\n\t"
    "and.b32 r26, r1, 1;\n\t"
    "add.s32 r7, r3, r26;\n\t"
    "barrier.sync 0;\n\t"
    "shl.b32 r27, r6, 1;\n\t"
    "add.s32 r28, r27, r7;\n\t"
    "shl.b32 r29, r28, 2;\n\t"
    "add.s32 r8, r21, r29;\n\t"
    "st.shared.f32 [r8], f7;\n\t"
    "st.shared.f32 [r8+8], f9;\n\t"
    "barrier.sync 0;\n\t"
    "add.s32 r31, r6, r7;\n\t"
    "shl.b32 r32, r31, 2;\n\t"
    "add.s32 r9, r21, r32;\n\t"
    "ld.shared.f32 f11, [r9];\n\t"
    "ld.shared.f32 f12, [r9+32];\n\t"
    "barrier.sync 0;\n\t"
    "st.shared.f32 [r8], f8;\n\t"
    "st.shared.f32 [r8+8], f10;\n\t"
    "barrier.sync 0;\n\t"
    "ld.shared.f32 f47, [r9];\n\t"
    "ld.shared.f32 f48, [r9+32];\n\t"
    "add.f32 f13, f11, f12;\n\t"
    "add.f32 f14, f47, f48;\n\t"
    "sub.f32 f49, f11, f12;\n\t"
    "sub.f32 f50, f47, f48;\n\t"
    "and.b32 r10, r1, 4;\n\t"
    "bfe.u32 r34, r1, 2, 1;\n\t"
    "mul.wide.u32 rd8, r34, 8;\n\t"
    "mov.u64 rd9, %7;\n\t"
    "add.s64 rd10, rd9, rd8;\n\t"
    "ld.global.v2.f32 {f51, f52}, [rd10];\n\t"
    "mul.f32 f55, f50, f52;\n\t"
    "fma.rn.f32 f15, f51, f49, f55;\n\t"
    "mul.f32 f56, f49, f52;\n\t"
    "mul.f32 f57, f51, f50;\n\t"
    "sub.f32 f16, f57, f56;\n\t"
    "and.b32 r35, r1, 3;\n\t"
    "add.s32 r11, r3, r35;\n\t"
    "barrier.sync 0;\n\t"
    "shl.b32 r36, r10, 1;\n\t"
    "add.s32 r37, r36, r11;\n\t"
    "shl.b32 r38, r37, 2;\n\t"
    "add.s32 r12, r21, r38;\n\t"
    "st.shared.f32 [r12], f13;\n\t"
    "st.shared.f32 [r12+16], f15;\n\t"
    "barrier.sync 0;\n\t"
    "add.s32 r40, r10, r11;\n\t"
    "shl.b32 r41, r40, 2;\n\t"
    "add.s32 r13, r21, r41;\n\t"
    "ld.shared.f32 f17, [r13];\n\t"
    "ld.shared.f32 f18, [r13+32];\n\t"
    "barrier.sync 0;\n\t"
    "st.shared.f32 [r12], f14;\n\t"
    "st.shared.f32 [r12+16], f16;\n\t"
    "barrier.sync 0;\n\t"
    "ld.shared.f32 f58, [r13];\n\t"
    "ld.shared.f32 f59, [r13+32];\n\t"
    "add.f32 %0, f17, f18;\n\t"
    "add.f32 %1, f58, f59;\n\t"
    "sub.f32 %2, f17, f18;\n\t"
    "sub.f32 %3, f58, f59;\n\t"
    "}"
     : "=f"(rmem[0].x), "=f"(rmem[0].y), "=f"(rmem[1].x), "=f"(rmem[1].y): "l"(smem), "l"(lut_sp_2_16), "l"(lut_sp_2_8), "l"(lut_sp_2_4), "f"(rmem[0].x), "f"(rmem[0].y), "f"(rmem[1].x), "f"(rmem[1].y));
};




template<> __forceinline__ __device__ void cufftdx_private_function<244, float, 1>(cufftdx::detail::complex<float> *rmem, void *smem){

asm volatile ("{\n\t"
    ".reg .f32 f<76>;\n\t"
    ".reg .b32 r<43>;\n\t"
    ".reg .b64 rd<11>;\n\t"
    "mov.u32 r1, %tid.x;\n\t"
    "add.f32 f1, %8, %10;\n\t"
    "add.f32 f2, %9, %11;\n\t"
    "sub.f32 f21, %8, %10;\n\t"
    "sub.f32 f22, %9, %11;\n\t"
    "and.b32 r2, r1, 7;\n\t"
    "mul.wide.u32 rd2, r2, 8;\n\t"
    "mov.u64 rd3, %5;\n\t"
    "add.s64 rd4, rd3, rd2;\n\t"
    "ld.global.v2.f32 {f23, f24}, [rd4];\n\t"
    "mul.f32 f27, f22, f24;\n\t"
    "fma.rn.f32 f3, f23, f21, f27;\n\t"
    "mul.f32 f28, f21, f24;\n\t"
    "mul.f32 f29, f23, f22;\n\t"
    "sub.f32 f4, f29, f28;\n\t"
    "mov.u32 r8, %tid.y;\n\t"
    "shl.b32 r9, r8, 4;\n\t"
    "shl.b32 r10, r1, 1;\n\t"
    "and.b32 r11, r10, -16;\n\t"
    "add.s32 r3, r11, r9;\n\t"
    "barrier.sync 0;\n\t"
    "shl.b32 r12, r2, 1;\n\t"
    "add.s32 r13, r12, r3;\n\t"
    "shl.b32 r14, r13, 3;\n\t"
    "{\n\t"
    ".reg .u64 wide1;\n\t"
    ".reg .u32 narrow1;\n\t"
    "mov.u64 wide1, %4;\n\t"
    "cvt.u32.u64 narrow1, wide1;\n\t"
    "cvta.to.shared.u32 r15, narrow1;\n\t"
    "}\n\t"
    "add.s32 r16, r15, r14;\n\t"
    "st.shared.v2.f32 [r16], {f1, f2};\n\t"
    "st.shared.v2.f32 [r16+8], {f3, f4};\n\t"
    "barrier.sync 0;\n\t"
    "add.s32 r17, r2, r3;\n\t"
    "shl.b32 r18, r17, 3;\n\t"
    "add.s32 r20, r15, r18;\n\t"
    "ld.shared.v2.f32 {f30, f31}, [r20];\n\t"
    "ld.shared.v2.f32 {f34, f35}, [r20+64];\n\t"
    "add.f32 f5, f30, f34;\n\t"
    "add.f32 f6, f31, f35;\n\t"
    "sub.f32 f38, f30, f34;\n\t"
    "sub.f32 f39, f31, f35;\n\t"
    "and.b32 r4, r1, 6;\n\t"
    "bfe.u32 r21, r1, 1, 2;\n\t"
    "mul.wide.u32 rd5, r21, 8;\n\t"
    "mov.u64 rd6, %6;\n\t"
    "add.s64 rd7, rd6, rd5;\n\t"
    "ld.global.v2.f32 {f40, f41}, [rd7];\n\t"
    "mul.f32 f44, f39, f41;\n\t"
    "fma.rn.f32 f7, f40, f38, f44;\n\t"
    "mul.f32 f45, f38, f41;\n\t"
    "mul.f32 f46, f40, f39;\n\t"
    "sub.f32 f8, f46, f45;\n\t"
    "and.b32 r22, r1, 1;\n\t"
    "add.s32 r5, r3, r22;\n\t"
    "barrier.sync 0;\n\t"
    "shl.b32 r23, r4, 1;\n\t"
    "add.s32 r24, r23, r5;\n\t"
    "shl.b32 r25, r24, 3;\n\t"
    "add.s32 r27, r15, r25;\n\t"
    "st.shared.v2.f32 [r27], {f5, f6};\n\t"
    "st.shared.v2.f32 [r27+16], {f7, f8};\n\t"
    "barrier.sync 0;\n\t"
    "add.s32 r28, r4, r5;\n\t"
    "shl.b32 r29, r28, 3;\n\t"
    "add.s32 r31, r15, r29;\n\t"
    "ld.shared.v2.f32 {f47, f48}, [r31];\n\t"
    "ld.shared.v2.f32 {f51, f52}, [r31+64];\n\t"
    "add.f32 f9, f47, f51;\n\t"
    "add.f32 f10, f48, f52;\n\t"
    "sub.f32 f55, f47, f51;\n\t"
    "sub.f32 f56, f48, f52;\n\t"
    "and.b32 r6, r1, 4;\n\t"
    "bfe.u32 r32, r1, 2, 1;\n\t"
    "mul.wide.u32 rd8, r32, 8;\n\t"
    "mov.u64 rd9, %7;\n\t"
    "add.s64 rd10, rd9, rd8;\n\t"
    "ld.global.v2.f32 {f57, f58}, [rd10];\n\t"
    "mul.f32 f61, f56, f58;\n\t"
    "fma.rn.f32 f11, f57, f55, f61;\n\t"
    "mul.f32 f62, f55, f58;\n\t"
    "mul.f32 f63, f57, f56;\n\t"
    "sub.f32 f12, f63, f62;\n\t"
    "and.b32 r33, r1, 3;\n\t"
    "add.s32 r7, r3, r33;\n\t"
    "barrier.sync 0;\n\t"
    "shl.b32 r34, r6, 1;\n\t"
    "add.s32 r35, r34, r7;\n\t"
    "shl.b32 r36, r35, 3;\n\t"
    "add.s32 r38, r15, r36;\n\t"
    "st.shared.v2.f32 [r38], {f9, f10};\n\t"
    "st.shared.v2.f32 [r38+32], {f11, f12};\n\t"
    "barrier.sync 0;\n\t"
    "add.s32 r39, r6, r7;\n\t"
    "shl.b32 r40, r39, 3;\n\t"
    "add.s32 r42, r15, r40;\n\t"
    "ld.shared.v2.f32 {f64, f65}, [r42];\n\t"
    "ld.shared.v2.f32 {f68, f69}, [r42+64];\n\t"
    "add.f32 %1, f65, f69;\n\t"
    "add.f32 %0, f64, f68;\n\t"
    "sub.f32 %3, f65, f69;\n\t"
    "sub.f32 %2, f64, f68;\n\t"
    "}"
     : "=f"(rmem[0].x), "=f"(rmem[0].y), "=f"(rmem[1].x), "=f"(rmem[1].y): "l"(smem), "l"(lut_sp_2_16), "l"(lut_sp_2_8), "l"(lut_sp_2_4), "f"(rmem[0].x), "f"(rmem[0].y), "f"(rmem[1].x), "f"(rmem[1].y));
};


#endif
