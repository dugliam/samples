#ifndef CUFFTDX_FFT_9_FP32_INV_PTX_HPP
#define CUFFTDX_FFT_9_FP32_INV_PTX_HPP



template<> __forceinline__ __device__ void cufftdx_private_function<334, float, 1>(cufftdx::detail::complex<float> *rmem, void *smem){

asm volatile ("{\n\t"
    ".reg .f32 f<141>;\n\t"
    ".reg .b64 rd<2>;\n\t"
    "add.f32 f37, %27, %35;\n\t"
    "add.f32 f38, %19, f37;\n\t"
    "add.f32 f39, %28, %36;\n\t"
    "add.f32 f40, %20, f39;\n\t"
    "fma.rn.f32 f41, f37, 0fBF000000, %19;\n\t"
    "sub.f32 f42, %28, %36;\n\t"
    "mul.f32 f43, f42, 0fBF5DB3D7;\n\t"
    "add.f32 f44, f43, f41;\n\t"
    "sub.f32 f45, f41, f43;\n\t"
    "fma.rn.f32 f46, f39, 0fBF000000, %20;\n\t"
    "sub.f32 f47, %27, %35;\n\t"
    "mul.f32 f48, f47, 0fBF5DB3D7;\n\t"
    "sub.f32 f49, f46, f48;\n\t"
    "add.f32 f50, f48, f46;\n\t"
    "add.f32 f51, %29, %37;\n\t"
    "add.f32 f52, %21, f51;\n\t"
    "add.f32 f53, %31, %39;\n\t"
    "add.f32 f54, %23, f53;\n\t"
    "fma.rn.f32 f55, f51, 0fBF000000, %21;\n\t"
    "sub.f32 f56, %31, %39;\n\t"
    "mul.f32 f57, f56, 0fBF5DB3D7;\n\t"
    "add.f32 f58, f57, f55;\n\t"
    "sub.f32 f59, f55, f57;\n\t"
    "fma.rn.f32 f60, f53, 0fBF000000, %23;\n\t"
    "sub.f32 f61, %29, %37;\n\t"
    "mul.f32 f62, f61, 0fBF5DB3D7;\n\t"
    "sub.f32 f63, f60, f62;\n\t"
    "add.f32 f64, f62, f60;\n\t"
    "add.f32 f65, %32, %40;\n\t"
    "add.f32 f66, %24, f65;\n\t"
    "add.f32 f67, %34, %41;\n\t"
    "add.f32 f68, %26, f67;\n\t"
    "fma.rn.f32 f69, f65, 0fBF000000, %24;\n\t"
    "sub.f32 f70, %34, %41;\n\t"
    "mul.f32 f71, f70, 0fBF5DB3D7;\n\t"
    "add.f32 f72, f71, f69;\n\t"
    "sub.f32 f73, f69, f71;\n\t"
    "fma.rn.f32 f74, f67, 0fBF000000, %26;\n\t"
    "sub.f32 f75, %32, %40;\n\t"
    "mul.f32 f76, f75, 0fBF5DB3D7;\n\t"
    "sub.f32 f77, f74, f76;\n\t"
    "add.f32 f78, f76, f74;\n\t"
    "mul.f32 f79, f58, 0f3F441B7D;\n\t"
    "mul.f32 f80, f63, 0f3F248DBB;\n\t"
    "sub.f32 f81, f79, f80;\n\t"
    "mul.f32 f82, f63, 0f3F441B7D;\n\t"
    "fma.rn.f32 f83, f58, 0f3F248DBB, f82;\n\t"
    "mul.f32 f84, f72, 0f3E31D0D4;\n\t"
    "mul.f32 f85, f77, 0f3F7C1C5C;\n\t"
    "sub.f32 f86, f84, f85;\n\t"
    "mul.f32 f87, f77, 0f3E31D0D4;\n\t"
    "fma.rn.f32 f88, f72, 0f3F7C1C5C, f87;\n\t"
    "mul.f32 f89, f59, 0f3E31D0D4;\n\t"
    "mul.f32 f90, f64, 0f3F7C1C5C;\n\t"
    "sub.f32 f91, f89, f90;\n\t"
    "mul.f32 f92, f64, 0f3E31D0D4;\n\t"
    "fma.rn.f32 f93, f59, 0f3F7C1C5C, f92;\n\t"
    "mul.f32 f94, f73, 0fBF708FB2;\n\t"
    "mul.f32 f95, f78, 0f3EAF1D44;\n\t"
    "sub.f32 f96, f94, f95;\n\t"
    "mul.f32 f97, f78, 0fBF708FB2;\n\t"
    "fma.rn.f32 f98, f73, 0f3EAF1D44, f97;\n\t"
    "add.f32 f99, f52, f66;\n\t"
    "add.f32 f100, f54, f68;\n\t"
    "fma.rn.f32 f101, f99, 0fBF000000, f38;\n\t"
    "sub.f32 f102, f54, f68;\n\t"
    "mul.f32 f103, f102, 0fBF5DB3D7;\n\t"
    "fma.rn.f32 f104, f100, 0fBF000000, f40;\n\t"
    "sub.f32 f105, f52, f66;\n\t"
    "mul.f32 f106, f105, 0fBF5DB3D7;\n\t"
    "add.f32 f107, f81, f86;\n\t"
    "add.f32 f108, f83, f88;\n\t"
    "fma.rn.f32 f109, f107, 0fBF000000, f44;\n\t"
    "sub.f32 f110, f83, f88;\n\t"
    "mul.f32 f111, f110, 0fBF5DB3D7;\n\t"
    "fma.rn.f32 f112, f108, 0fBF000000, f49;\n\t"
    "sub.f32 f113, f81, f86;\n\t"
    "mul.f32 f114, f113, 0fBF5DB3D7;\n\t"
    "add.f32 f115, f91, f96;\n\t"
    "add.f32 f116, f93, f98;\n\t"
    "fma.rn.f32 f117, f115, 0fBF000000, f45;\n\t"
    "sub.f32 f118, f93, f98;\n\t"
    "mul.f32 f119, f118, 0fBF5DB3D7;\n\t"
    "fma.rn.f32 f120, f116, 0fBF000000, f50;\n\t"
    "sub.f32 f121, f91, f96;\n\t"
    "mul.f32 f122, f121, 0fBF5DB3D7;\n\t"
    "add.f32 %1, f40, f100;\n\t"
    "add.f32 %0, f38, f99;\n\t"
    "add.f32 %3, f49, f108;\n\t"
    "add.f32 %2, f44, f107;\n\t"
    "add.f32 %5, f50, f116;\n\t"
    "add.f32 %4, f45, f115;\n\t"
    "sub.f32 %7, f104, f106;\n\t"
    "add.f32 %6, f103, f101;\n\t"
    "sub.f32 %9, f112, f114;\n\t"
    "add.f32 %8, f111, f109;\n\t"
    "sub.f32 %11, f120, f122;\n\t"
    "add.f32 %10, f119, f117;\n\t"
    "add.f32 %13, f106, f104;\n\t"
    "sub.f32 %12, f101, f103;\n\t"
    "add.f32 %15, f114, f112;\n\t"
    "sub.f32 %14, f109, f111;\n\t"
    "add.f32 %17, f122, f120;\n\t"
    "sub.f32 %16, f117, f119;\n\t"
    "}"
     : "=f"(rmem[0].x), "=f"(rmem[0].y), "=f"(rmem[1].x), "=f"(rmem[1].y), "=f"(rmem[2].x), "=f"(rmem[2].y), "=f"(rmem[3].x), "=f"(rmem[3].y), "=f"(rmem[4].x), "=f"(rmem[4].y), "=f"(rmem[5].x), "=f"(rmem[5].y), "=f"(rmem[6].x), "=f"(rmem[6].y), "=f"(rmem[7].x), "=f"(rmem[7].y), "=f"(rmem[8].x), "=f"(rmem[8].y): "l"(smem), "f"(rmem[0].x), "f"(rmem[0].y), "f"(rmem[1].x), "f"(rmem[1].y), "f"(rmem[1].y), "f"(rmem[2].x), "f"(rmem[2].y), "f"(rmem[2].y), "f"(rmem[3].x), "f"(rmem[3].y), "f"(rmem[4].x), "f"(rmem[4].y), "f"(rmem[4].y), "f"(rmem[5].x), "f"(rmem[5].y), "f"(rmem[5].y), "f"(rmem[6].x), "f"(rmem[6].y), "f"(rmem[7].x), "f"(rmem[7].y), "f"(rmem[7].y), "f"(rmem[8].x), "f"(rmem[8].y));
};




template<> __forceinline__ __device__ void cufftdx_private_function<335, float, 1>(cufftdx::detail::complex<float> *rmem, void *smem){

asm volatile ("{\n\t"
    ".reg .f32 f<72>;\n\t"
    ".reg .b32 r<16>;\n\t"
    ".reg .b64 rd<7>;\n\t"
    "mov.u32 r3, %tid.y;\n\t"
    "mov.u32 r4, %tid.x;\n\t"
    "add.f32 f19, %10, %13;\n\t"
    "add.f32 f1, %8, f19;\n\t"
    "add.f32 f20, %12, %14;\n\t"
    "add.f32 f2, %9, f20;\n\t"
    "fma.rn.f32 f21, f19, 0fBF000000, %8;\n\t"
    "sub.f32 f22, %12, %14;\n\t"
    "mul.f32 f23, f22, 0fBF5DB3D7;\n\t"
    "add.f32 f24, f23, f21;\n\t"
    "sub.f32 f25, f21, f23;\n\t"
    "fma.rn.f32 f26, f20, 0fBF000000, %9;\n\t"
    "sub.f32 f27, %10, %13;\n\t"
    "mul.f32 f28, f27, 0fBF5DB3D7;\n\t"
    "sub.f32 f29, f26, f28;\n\t"
    "add.f32 f30, f28, f26;\n\t"
    "mul.wide.u32 rd2, r4, -1431655765;\n\t"
    "shr.u64 rd3, rd2, 33;\n\t"
    "cvt.u32.u64 r5, rd3;\n\t"
    "mul.lo.s32 r6, r5, 3;\n\t"
    "sub.s32 r1, r4, r6;\n\t"
    "add.s32 r7, r5, r3;\n\t"
    "mul.lo.s32 r2, r7, 9;\n\t"
    "mul.wide.u32 rd4, r1, 8;\n\t"
    "mov.u64 rd5, %7;\n\t"
    "add.s64 rd6, rd5, rd4;\n\t"
    "ld.global.v2.f32 {f31, f32}, [rd6];\n\t"
    "mul.f32 f35, f29, f32;\n\t"
    "fma.rn.f32 f3, f31, f24, f35;\n\t"
    "mul.f32 f36, f24, f32;\n\t"
    "mul.f32 f37, f31, f29;\n\t"
    "sub.f32 f4, f37, f36;\n\t"
    "mul.f32 f38, f31, f31;\n\t"
    "mul.f32 f39, f32, f32;\n\t"
    "sub.f32 f40, f38, f39;\n\t"
    "mul.f32 f41, f32, f31;\n\t"
    "fma.rn.f32 f42, f32, f31, f41;\n\t"
    "mul.f32 f43, f30, f42;\n\t"
    "fma.rn.f32 f5, f40, f25, f43;\n\t"
    "mul.f32 f44, f25, f42;\n\t"
    "mul.f32 f45, f40, f30;\n\t"
    "sub.f32 f6, f45, f44;\n\t"
    "barrier.sync 0;\n\t"
    "mad.lo.s32 r8, r1, 3, r2;\n\t"
    "shl.b32 r9, r8, 3;\n\t"
    "{\n\t"
    ".reg .u64 wide1;\n\t"
    ".reg .u32 narrow1;\n\t"
    "mov.u64 wide1, %6;\n\t"
    "cvt.u32.u64 narrow1, wide1;\n\t"
    "cvta.to.shared.u32 r10, narrow1;\n\t"
    "}\n\t"
    "add.s32 r11, r10, r9;\n\t"
    "st.shared.v2.f32 [r11], {f1, f2};\n\t"
    "st.shared.v2.f32 [r11+8], {f3, f4};\n\t"
    "st.shared.v2.f32 [r11+16], {f5, f6};\n\t"
    "barrier.sync 0;\n\t"
    "add.s32 r12, r1, r2;\n\t"
    "shl.b32 r13, r12, 3;\n\t"
    "add.s32 r15, r10, r13;\n\t"
    "ld.shared.v2.f32 {f46, f47}, [r15];\n\t"
    "ld.shared.v2.f32 {f50, f51}, [r15+24];\n\t"
    "ld.shared.v2.f32 {f54, f55}, [r15+48];\n\t"
    "add.f32 f58, f50, f54;\n\t"
    "add.f32 f59, f51, f55;\n\t"
    "fma.rn.f32 f60, f58, 0fBF000000, f46;\n\t"
    "sub.f32 f61, f51, f55;\n\t"
    "mul.f32 f62, f61, 0fBF5DB3D7;\n\t"
    "fma.rn.f32 f63, f59, 0fBF000000, f47;\n\t"
    "sub.f32 f64, f50, f54;\n\t"
    "mul.f32 f65, f64, 0fBF5DB3D7;\n\t"
    "add.f32 %1, f47, f59;\n\t"
    "add.f32 %0, f46, f58;\n\t"
    "sub.f32 %3, f63, f65;\n\t"
    "add.f32 %2, f62, f60;\n\t"
    "add.f32 %5, f65, f63;\n\t"
    "sub.f32 %4, f60, f62;\n\t"
    "}"
     : "=f"(rmem[0].x), "=f"(rmem[0].y), "=f"(rmem[1].x), "=f"(rmem[1].y), "=f"(rmem[2].x), "=f"(rmem[2].y): "l"(smem), "l"(lut_sp_3_9), "f"(rmem[0].x), "f"(rmem[0].y), "f"(rmem[1].x), "f"(rmem[1].y), "f"(rmem[1].y), "f"(rmem[2].x), "f"(rmem[2].y));
};




template<> __forceinline__ __device__ void cufftdx_private_function<336, float, 1>(cufftdx::detail::complex<float> *rmem, void *smem){

asm volatile ("{\n\t"
    ".reg .f32 f<66>;\n\t"
    ".reg .b32 r<16>;\n\t"
    ".reg .b64 rd<7>;\n\t"
    "mov.u32 r5, %tid.y;\n\t"
    "mov.u32 r6, %tid.x;\n\t"
    "add.f32 f22, %10, %13;\n\t"
    "add.f32 f1, %8, f22;\n\t"
    "add.f32 f23, %12, %14;\n\t"
    "add.f32 f2, %9, f23;\n\t"
    "fma.rn.f32 f24, f22, 0fBF000000, %8;\n\t"
    "sub.f32 f25, %12, %14;\n\t"
    "mul.f32 f26, f25, 0fBF5DB3D7;\n\t"
    "add.f32 f27, f26, f24;\n\t"
    "sub.f32 f28, f24, f26;\n\t"
    "fma.rn.f32 f29, f23, 0fBF000000, %9;\n\t"
    "sub.f32 f30, %10, %13;\n\t"
    "mul.f32 f31, f30, 0fBF5DB3D7;\n\t"
    "sub.f32 f32, f29, f31;\n\t"
    "add.f32 f33, f31, f29;\n\t"
    "mul.wide.u32 rd2, r6, -1431655765;\n\t"
    "shr.u64 rd3, rd2, 33;\n\t"
    "cvt.u32.u64 r7, rd3;\n\t"
    "mul.lo.s32 r8, r7, 3;\n\t"
    "sub.s32 r1, r6, r8;\n\t"
    "add.s32 r9, r7, r5;\n\t"
    "mul.lo.s32 r2, r9, 9;\n\t"
    "mul.wide.u32 rd4, r1, 8;\n\t"
    "mov.u64 rd5, %7;\n\t"
    "add.s64 rd6, rd5, rd4;\n\t"
    "ld.global.v2.f32 {f34, f35}, [rd6];\n\t"
    "mul.f32 f38, f32, f35;\n\t"
    "fma.rn.f32 f3, f34, f27, f38;\n\t"
    "mul.f32 f39, f27, f35;\n\t"
    "mul.f32 f40, f34, f32;\n\t"
    "sub.f32 f4, f40, f39;\n\t"
    "mul.f32 f41, f34, f34;\n\t"
    "mul.f32 f42, f35, f35;\n\t"
    "sub.f32 f43, f41, f42;\n\t"
    "mul.f32 f44, f35, f34;\n\t"
    "fma.rn.f32 f45, f35, f34, f44;\n\t"
    "mul.f32 f46, f33, f45;\n\t"
    "fma.rn.f32 f5, f43, f28, f46;\n\t"
    "mul.f32 f47, f28, f45;\n\t"
    "mul.f32 f48, f43, f33;\n\t"
    "sub.f32 f6, f48, f47;\n\t"
    "barrier.sync 0;\n\t"
    "mad.lo.s32 r10, r1, 3, r2;\n\t"
    "shl.b32 r11, r10, 2;\n\t"
    "{\n\t"
    ".reg .u64 wide1;\n\t"
    ".reg .u32 narrow1;\n\t"
    "mov.u64 wide1, %6;\n\t"
    "cvt.u32.u64 narrow1, wide1;\n\t"
    "cvta.to.shared.u32 r12, narrow1;\n\t"
    "}\n\t"
    "add.s32 r3, r12, r11;\n\t"
    "st.shared.f32 [r3], f1;\n\t"
    "st.shared.f32 [r3+4], f3;\n\t"
    "st.shared.f32 [r3+8], f5;\n\t"
    "barrier.sync 0;\n\t"
    "add.s32 r13, r1, r2;\n\t"
    "shl.b32 r14, r13, 2;\n\t"
    "add.s32 r4, r12, r14;\n\t"
    "ld.shared.f32 f7, [r4];\n\t"
    "ld.shared.f32 f8, [r4+12];\n\t"
    "ld.shared.f32 f9, [r4+24];\n\t"
    "barrier.sync 0;\n\t"
    "st.shared.f32 [r3], f2;\n\t"
    "st.shared.f32 [r3+4], f4;\n\t"
    "st.shared.f32 [r3+8], f6;\n\t"
    "barrier.sync 0;\n\t"
    "ld.shared.f32 f49, [r4];\n\t"
    "ld.shared.f32 f50, [r4+12];\n\t"
    "ld.shared.f32 f51, [r4+24];\n\t"
    "add.f32 f52, f8, f9;\n\t"
    "add.f32 f53, f50, f51;\n\t"
    "fma.rn.f32 f54, f52, 0fBF000000, f7;\n\t"
    "sub.f32 f55, f50, f51;\n\t"
    "mul.f32 f56, f55, 0fBF5DB3D7;\n\t"
    "fma.rn.f32 f57, f53, 0fBF000000, f49;\n\t"
    "sub.f32 f58, f8, f9;\n\t"
    "mul.f32 f59, f58, 0fBF5DB3D7;\n\t"
    "add.f32 %0, f7, f52;\n\t"
    "add.f32 %1, f49, f53;\n\t"
    "sub.f32 %3, f57, f59;\n\t"
    "add.f32 %2, f56, f54;\n\t"
    "add.f32 %5, f59, f57;\n\t"
    "sub.f32 %4, f54, f56;\n\t"
    "}"
     : "=f"(rmem[0].x), "=f"(rmem[0].y), "=f"(rmem[1].x), "=f"(rmem[1].y), "=f"(rmem[2].x), "=f"(rmem[2].y): "l"(smem), "l"(lut_sp_3_9), "f"(rmem[0].x), "f"(rmem[0].y), "f"(rmem[1].x), "f"(rmem[1].y), "f"(rmem[1].y), "f"(rmem[2].x), "f"(rmem[2].y));
};


#endif
