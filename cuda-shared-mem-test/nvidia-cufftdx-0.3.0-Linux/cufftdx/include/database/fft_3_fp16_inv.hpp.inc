#ifndef CUFFTDX_FFT_3_FP16_INV_PTX_HPP
#define CUFFTDX_FFT_3_FP16_INV_PTX_HPP



template<> __forceinline__ __device__ void cufftdx_private_function<1103, __half2, 1>(cufftdx::detail::complex<__half2> *rmem, void *smem){

asm volatile ("{\n\t"
    ".reg .b16 rs<3>;\n\t"
    ".reg .b32 r<85>;\n\t"
    ".reg .f64 fd<3>;\n\t"
    ".reg .b64 rd<2>;\n\t"
    "mov.f64 fd1, 0dBFE0000000000000;\n\t"
    "{\n\t"
    "cvt.rn.f16.f64 rs1, fd1;\n\t"
    "}\n\t"
    "mov.b32 r72, {rs1, rs1};\n\t"
    "mov.f64 fd2, 0dBFEBB67AE8584CAA;\n\t"
    "{\n\t"
    "cvt.rn.f16.f64 rs2, fd2;\n\t"
    "}\n\t"
    "mov.b32 r81, {rs2, rs2};\n\t"
    "{\n\t"
    "add.f16x2 r1, %9, %11;\n\t"
    "}\n\t"
    "{\n\t"
    "add.f16x2 %0, %7, r1;\n\t"
    "}\n\t"
    "{\n\t"
    "add.f16x2 r7, %10, %12;\n\t"
    "}\n\t"
    "{\n\t"
    "add.f16x2 %1, %8, r7;\n\t"
    "}\n\t"
    "{\n\t"
    "add.f16x2 r13, %9, %11;\n\t"
    "}\n\t"
    "{\n\t"
    "mul.f16x2 r16, r13, r72;\n\t"
    "}\n\t"
    "{\n\t"
    "add.f16x2 r19, %7, r16;\n\t"
    "}\n\t"
    "{\n\t"
    "sub.f16x2 r22, %10, %12;\n\t"
    "}\n\t"
    "{\n\t"
    "mul.f16x2 r25, r22, r81;\n\t"
    "}\n\t"
    "{\n\t"
    "add.f16x2 %2, r19, r25;\n\t"
    "}\n\t"
    "{\n\t"
    "add.f16x2 r31, %9, %11;\n\t"
    "}\n\t"
    "{\n\t"
    "mul.f16x2 r34, r31, r72;\n\t"
    "}\n\t"
    "{\n\t"
    "add.f16x2 r37, %7, r34;\n\t"
    "}\n\t"
    "{\n\t"
    "sub.f16x2 r40, %10, %12;\n\t"
    "}\n\t"
    "{\n\t"
    "mul.f16x2 r43, r40, r81;\n\t"
    "}\n\t"
    "{\n\t"
    "sub.f16x2 %4, r37, r43;\n\t"
    "}\n\t"
    "{\n\t"
    "add.f16x2 r49, %10, %12;\n\t"
    "}\n\t"
    "{\n\t"
    "mul.f16x2 r52, r49, r72;\n\t"
    "}\n\t"
    "{\n\t"
    "add.f16x2 r55, %8, r52;\n\t"
    "}\n\t"
    "{\n\t"
    "sub.f16x2 r58, %9, %11;\n\t"
    "}\n\t"
    "{\n\t"
    "mul.f16x2 r61, r58, r81;\n\t"
    "}\n\t"
    "{\n\t"
    "sub.f16x2 %3, r55, r61;\n\t"
    "}\n\t"
    "{\n\t"
    "add.f16x2 r67, %10, %12;\n\t"
    "}\n\t"
    "{\n\t"
    "mul.f16x2 r70, r67, r72;\n\t"
    "}\n\t"
    "{\n\t"
    "add.f16x2 r73, %8, r70;\n\t"
    "}\n\t"
    "{\n\t"
    "sub.f16x2 r76, %9, %11;\n\t"
    "}\n\t"
    "{\n\t"
    "mul.f16x2 r79, r76, r81;\n\t"
    "}\n\t"
    "{\n\t"
    "add.f16x2 %5, r73, r79;\n\t"
    "}\n\t"
    "}"
     : "=r"(__HALF2_TO_UI(rmem[0].x)), "=r"(__HALF2_TO_UI(rmem[0].y)), "=r"(__HALF2_TO_UI(rmem[1].x)), "=r"(__HALF2_TO_UI(rmem[1].y)), "=r"(__HALF2_TO_UI(rmem[2].x)), "=r"(__HALF2_TO_UI(rmem[2].y)): "l"(smem), "r"(__HALF2_TO_UI(rmem[0].x)), "r"(__HALF2_TO_UI(rmem[0].y)), "r"(__HALF2_TO_UI(rmem[1].x)), "r"(__HALF2_TO_UI(rmem[1].y)), "r"(__HALF2_TO_UI(rmem[2].x)), "r"(__HALF2_TO_UI(rmem[2].y)));
};


#endif
